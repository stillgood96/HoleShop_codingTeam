<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">

    <context:component-scan base-package="org.zerock"></context:component-scan>

    <!--    Root Context: defines shared resources visible to all other web components-->
    <bean id="hikariConfig" class="com.zaxxer.hikari.HikariConfig">
        <property name="driverClassName" value="org.mariadb.jdbc.Driver"></property>
        <property name="jdbcUrl" value="jdbc:mariadb://wishket-aws.cw2h1nljbpsk.ap-northeast-2.rds.amazonaws.com:3306/wishket"></property>
        <property name="username" value="admin"></property>
        <property name="password" value="aa787574"></property>
    </bean>

<!--    Hikari configuration -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">
        <constructor-arg ref="hikariConfig"/>
    </bean>

<!--
           MyBatis 관련 SQLSessionFactory
           SqlSessionFactory에서 SQLSession을 만들고 만들어진 Session을 이용해서
           Connection을 생성하거나 원하는 SQL을 전달하고 결과를 리턴 받는 구조로 작성하게 된다.

           SqlSessionFactoryBean을 등록하는 작업은 SqlSessionFactoryBean을 이용하고
           패키지명을 보면 MyBatis의 패키지가 아니라 스프링과 연동 작업을 처리하는 mybatis-spring 라이브러리의
           클래스임을 알 수 있다.
 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--
        MyBatis mapper
        scan을 통해서 지정된 패키지의 모든 MyBatis 관련 어노테이션을 찾아서 처리한다.
        Mapper 설정작업은 각각의 XML이나 Mapper 인터페이스를 설정할 수 도 있지만,
        매번 너무 번잡하기 때문에 예제는 자동으로 org.zerock.mapper 패키지를 인식하는 방식으로
        작성하는 것이 가장 편리하다.
-->
    <mybatis-spring:scan base-package="org.zerock.mapper"/>


</beans>